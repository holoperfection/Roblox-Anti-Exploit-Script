banList = {}

local banData = game:GetService("DataStoreService"):GetDataStore("banList")

function antiTeleport(p)
	if not p:IsA("Player") then return end
	local char = p.Character
	local root = char:WaitForChild("HumanoidRootPart")
	local hum = char:WaitForChild("Humanoid")
	if root==nil then
		p:Kick("Attempting to bypass")
		banData:SetAsync(p.UserId,true)
	end
	if hum.RigType == Enum.HumanoidRigType.R15 and char:FindFirstChild("LowerTorso")==nil then
		p:Kick("Bypassing")
		banData:SetAsync(p.UserId,true)
	elseif hum.RigType == Enum.HumanoidStateType.R6 and char:FindFirstChild("Torso")==nil then
		p:Kick("Bypassing")
		banData:SetAsync(p.UserId,true)
	end
	local pos1 = root.CFrame
	wait(2)
	local pos2 = root.CFrame
	local mag = (pos1-pos2).magnitude
	if mag>25 then
		p:Kick("Teleporting")
		banData:SetAsync(p.UserId,true)
	end
end

game.Players.PlayerAdded:Connect(function(p)
	for _,ban in ipairs(banList) do
		if p.Name==ban then
			p:Kick("You are banned from this game")
		end
	end
	local stat = banData:GetAsync(p.UserId)
	if stat then
		p:Kick("You are banned from this game")
	elseif stat==nil then
		banData:SetAsync(p.UserId,false)
	end
	local char = p.Character
	local hum = char:WaitForChild("Humanoid")
	local root = char:WaitForChild("HumanoidRootPart")
	hum.Changed:Connect(function()
		if hum.WalkSpeed>32 then -- if you have a sprint script, you can edit this
			banData:SetAsync(p.UserId,true)
			p:Kick("Banned for altering WalkSpeed")
		else
			if hum.JumpPower>50 then
				banData:SetAsync(p.UserId,true)
				p.Kick("Banned for altering JumpPower")
			else
				if hum.HipHeight>2 then
					banData:SetAsync(p.UserId,true)
					p:Kick("Banned for altering HipHeight")
				end
			end
		end		
	end)
	while wait() do
		if root:FindFirstChildOfClass("BodyPosition") or root:FindFirstChildOfClass("BodyGyro") or root:FindFirstChildOfClass("BodyVelocity") or root:FindFirstChildOfClass("RocketPropulsion") then
			p:Kick("Flying")
			banData:SetAsync(p.UserId,true)
		else
			if hum.RigType == Enum.HumanoidRigType.R6 and char["Torso"]:FindFirstChildOfClass("BodyPosition") or char["Torso"]:FindFirstChildOfClass("BodyGyro") or char["Torso"]:FindFirstChildOfClass("BodyVelocity") or char["Torso"]:FindFirstChildOfClass("RocketPropulsion") then
				p:Kick("Flying")
				banData:SetAsync(p.UserId,true)
			else
				if hum.RigType == Enum.HumanoidRigType.R15 and char["LowerTorso"]:FindFirstChildOfClass("BodyPosition") or char["LowerTorso"]:FindFirstChildOfClass("BodyGyro") or char["LowerTorso"]:FindFirstChildOfClass("BodyVelocity") or char["LowerTorso"]:FindFirstChildOfClass("RocketPropulsion") then
					p:Kick("Flying")
					banData:SetAsync(p.UserId,true)
				else
					antiTeleport()
				end
			end
		end
	end
end)  